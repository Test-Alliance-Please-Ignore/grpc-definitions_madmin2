# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: grpc_madmin/user.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import grpc_madmin.generic_pb2
import grpc_madmin.user_pb2


class UserServiceBase(abc.ABC):

    @abc.abstractmethod
    async def OnUpdateUser(self, stream: 'grpclib.server.Stream[grpc_madmin.user_pb2.UserAccessUpdated, grpc_madmin.generic_pb2.GenericResponse]') -> None:
        pass

    @abc.abstractmethod
    async def OnDisableUser(self, stream: 'grpclib.server.Stream[grpc_madmin.user_pb2.UserAccessUpdated, grpc_madmin.generic_pb2.GenericResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListSSGs(self, stream: 'grpclib.server.Stream[grpc_madmin.user_pb2.RequestSSGListing, grpc_madmin.user_pb2.ServerSpecificGroup]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/grpc_madmin.user.UserService/OnUpdateUser': grpclib.const.Handler(
                self.OnUpdateUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                grpc_madmin.user_pb2.UserAccessUpdated,
                grpc_madmin.generic_pb2.GenericResponse,
            ),
            '/grpc_madmin.user.UserService/OnDisableUser': grpclib.const.Handler(
                self.OnDisableUser,
                grpclib.const.Cardinality.UNARY_UNARY,
                grpc_madmin.user_pb2.UserAccessUpdated,
                grpc_madmin.generic_pb2.GenericResponse,
            ),
            '/grpc_madmin.user.UserService/ListSSGs': grpclib.const.Handler(
                self.ListSSGs,
                grpclib.const.Cardinality.UNARY_STREAM,
                grpc_madmin.user_pb2.RequestSSGListing,
                grpc_madmin.user_pb2.ServerSpecificGroup,
            ),
        }


class UserServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.OnUpdateUser = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grpc_madmin.user.UserService/OnUpdateUser',
            grpc_madmin.user_pb2.UserAccessUpdated,
            grpc_madmin.generic_pb2.GenericResponse,
        )
        self.OnDisableUser = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grpc_madmin.user.UserService/OnDisableUser',
            grpc_madmin.user_pb2.UserAccessUpdated,
            grpc_madmin.generic_pb2.GenericResponse,
        )
        self.ListSSGs = grpclib.client.UnaryStreamMethod(
            channel,
            '/grpc_madmin.user.UserService/ListSSGs',
            grpc_madmin.user_pb2.RequestSSGListing,
            grpc_madmin.user_pb2.ServerSpecificGroup,
        )


class BotServiceBase(abc.ABC):

    @abc.abstractmethod
    async def UpdateUserRoles(self, stream: 'grpclib.server.Stream[grpc_madmin.user_pb2.RoleAccessUpdate, grpc_madmin.generic_pb2.GenericResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/grpc_madmin.user.BotService/UpdateUserRoles': grpclib.const.Handler(
                self.UpdateUserRoles,
                grpclib.const.Cardinality.UNARY_UNARY,
                grpc_madmin.user_pb2.RoleAccessUpdate,
                grpc_madmin.generic_pb2.GenericResponse,
            ),
        }


class BotServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.UpdateUserRoles = grpclib.client.UnaryUnaryMethod(
            channel,
            '/grpc_madmin.user.BotService/UpdateUserRoles',
            grpc_madmin.user_pb2.RoleAccessUpdate,
            grpc_madmin.generic_pb2.GenericResponse,
        )
